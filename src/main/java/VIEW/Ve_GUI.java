/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package VIEW;

import java.awt.Color;
import java.awt.Font;
import java.sql.Date;
import java.sql.Timestamp;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.List;
import java.util.ArrayList;
import java.util.stream.Collectors;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

import CONTROL.GiaoDich_DAO;
import CONTROL.Ve_DAO;
import MODEL.GiaoDich;
import MODEL.KhachHang;
import MODEL.NhanVien;
import MODEL.Ve;

/**
 *
 * @author 84837
 */
public class Ve_GUI extends javax.swing.JPanel {
    private DefaultTableModel originalModel;
    private Ve_DAO veDAO;
    private List<Ve> veList; // Lưu trữ danh sách vé để lọc

    /**
     * Creates new form BaoCaoCongViec_GUI
     */
    public Ve_GUI() {
        initComponents();
        updateHeader();
        originalModel = (DefaultTableModel) tbDanhSachDatPhong.getModel();
        veDAO = new Ve_DAO();
        // Khởi tạo các giá trị cho cboTrangThai
        cboTrangThai.addItem("Tất cả");
        cboTrangThai.addItem("Đã bán");
        cboTrangThai.addItem("Chưa bán");
        loadVeData();
        addEventListeners();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        titleHoaDon = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbDanhSachDatPhong = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNgayCheckIn = new com.toedter.calendar.JDateChooser();
        txtNgayCheckOut = new com.toedter.calendar.JDateChooser();
        cboTrangThai = new javax.swing.JComboBox<>();
        btnXuatFile = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnTimKiem = new javax.swing.JButton();
        txtTimKiem = new javax.swing.JTextField();

        setLayout(new java.awt.CardLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        titleHoaDon.setFont(new java.awt.Font("Segoe UI", 1, 18));
        titleHoaDon.setText("Vé");

        tbDanhSachDatPhong.setModel(new javax.swing.table.DefaultTableModel(
            new Object[][] {},
            new String[] { "Mã vé", "Lịch chiếu", "Ghế", "Giá vé", "Trạng thái vé", "Thời gian bán", "Nhân Viên", "Khách Hàng" }
        ) {
            Class<?>[] types = new Class<?>[] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class,
                java.lang.String.class, java.lang.String.class, java.lang.String.class,
                java.lang.String.class, java.lang.String.class
            };

            @Override
            public Class<?> getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        });
        tbDanhSachDatPhong.setRowHeight(40);
        jScrollPane1.setViewportView(tbDanhSachDatPhong);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14));
        jLabel5.setText("Đến");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14));
        jLabel6.setText("Từ");

        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/Search.png")));

        txtTimKiem.setForeground(new java.awt.Color(144, 144, 144));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(titleHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnTimKiem)
                    .addGap(27, 27, 27)
                    .addComponent(btnXuatFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(28, 28, 28)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(txtNgayCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(txtNgayCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(37, 37, 37)
                    .addComponent(cboTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(15, 15, 15))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addGap(0, 10, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(titleHoaDon)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 4, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(cboTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel5)
                                        .addComponent(txtNgayCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtNgayCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(btnTimKiem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnXuatFile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                                        .addComponent(txtTimKiem))))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 751, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap())
        );

        add(jPanel1, "card2");
    }

    private void updateHeader() {
        JTableHeader header = tbDanhSachDatPhong.getTableHeader();
        header.setFont(new Font("Times New Roman", Font.BOLD, 16));
    }

    private void loadVeData() {
        veList = veDAO.getAllGiaoDich();
        updateTable(veList);
    }

    private void updateTable(List<Ve> veList) {
        originalModel.setRowCount(0);
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

        for (Ve ve : veList) {
            String maVe = ve.getMaVe();
            String lichChieu = ve.getLichChieu() != null ? ve.getLichChieu().getMaLichChieu() : "N/A";
            String ghe = ve.getGhe() != null ? ve.getGhe().getMaGhe() : "N/A";
            String giaVe = String.valueOf(ve.getGiaVe().intValue());
            String trangThaiVe = ve.getTrangThaiVe();
            String thoiGianBan = ve.getThoiGianBan() != null ? dateFormat.format(ve.getThoiGianBan()) : "N/A";
            String nhanVien = ve.getNhanVien() != null ? ve.getNhanVien().getMaNHanVien() : "N/A";
            String khachHang = ve.getKhachHang() != null ? ve.getKhachHang().getMaKhachHang() : "N/A";

            originalModel.addRow(new Object[] {
                maVe, lichChieu, ghe, giaVe, trangThaiVe, thoiGianBan, nhanVien, khachHang
            });
        }
    }

    private void addEventListeners() {
        // Sự kiện cho nút tìm kiếm
        btnTimKiem.addActionListener(e -> filterVeData());

        // Sự kiện khi thay đổi giá trị trong cboTrangThai
        cboTrangThai.addActionListener(e -> filterVeData());

        // Sự kiện khi thay đổi ngày
        txtNgayCheckIn.getDateEditor().addPropertyChangeListener("date", evt -> filterVeData());
        txtNgayCheckOut.getDateEditor().addPropertyChangeListener("date", evt -> filterVeData());

        // Sự kiện khi nhập vào ô tìm kiếm
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyReleased(java.awt.event.KeyEvent evt) {
                filterVeData();
            }
        });
    }

    private void filterVeData() {
        List<Ve> filteredList = new ArrayList<>(veList);

        // Lọc theo từ khóa tìm kiếm
        String keyword = txtTimKiem.getText().trim().toLowerCase();
        if (!keyword.isEmpty()) {
            filteredList = filteredList.stream().filter(ve -> {
                String maVe = ve.getMaVe() != null ? ve.getMaVe().toLowerCase() : "";
                String lichChieu = ve.getLichChieu() != null ? ve.getLichChieu().getMaLichChieu().toLowerCase() : "";
                String ghe = ve.getGhe() != null ? ve.getGhe().getMaGhe().toLowerCase() : "";
                String nhanVien = ve.getNhanVien() != null ? ve.getNhanVien().getMaNHanVien().toLowerCase() : "";
                String khachHang = ve.getKhachHang() != null ? ve.getKhachHang().getMaKhachHang().toLowerCase() : "";
                return maVe.contains(keyword) || lichChieu.contains(keyword) || ghe.contains(keyword) ||
                       nhanVien.contains(keyword) || khachHang.contains(keyword);
            }).collect(Collectors.toList());
        }

        // Lọc theo trạng thái
        String trangThai = cboTrangThai.getSelectedItem().toString();
        if (!trangThai.equals("Tất cả")) {
            filteredList = filteredList.stream()
                .filter(ve -> ve.getTrangThaiVe().equalsIgnoreCase(trangThai))
                .collect(Collectors.toList());
        }

        // Lọc theo khoảng thời gian
        java.util.Date checkInDate = txtNgayCheckIn.getDate();
        java.util.Date checkOutDate = txtNgayCheckOut.getDate();

        if (checkInDate != null) {
            filteredList = filteredList.stream().filter(ve -> {
                if (ve.getThoiGianBan() == null) return false;
                java.util.Date thoiGianBan = new java.util.Date(ve.getThoiGianBan().getTime());
                return !thoiGianBan.before(checkInDate);
            }).collect(Collectors.toList());
        }

        if (checkOutDate != null) {
            // Thêm 1 ngày vào checkOutDate để bao gồm cả ngày được chọn
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(checkOutDate);
            calendar.add(Calendar.DAY_OF_MONTH, 1);
            java.util.Date endOfCheckOutDate = calendar.getTime();

            filteredList = filteredList.stream().filter(ve -> {
                if (ve.getThoiGianBan() == null) return false;
                java.util.Date thoiGianBan = new java.util.Date(ve.getThoiGianBan().getTime());
                return thoiGianBan.before(endOfCheckOutDate);
            }).collect(Collectors.toList());
        }

        // Cập nhật bảng với danh sách đã lọc
        updateTable(filteredList);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JPanel btnXuatFile;
    private javax.swing.JComboBox<String> cboTrangThai;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbDanhSachDatPhong;
    private javax.swing.JLabel titleHoaDon;
    private com.toedter.calendar.JDateChooser txtNgayCheckIn;
    private com.toedter.calendar.JDateChooser txtNgayCheckOut;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}